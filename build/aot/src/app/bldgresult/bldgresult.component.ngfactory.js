/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as import0 from '@angular/core';
import * as import1 from '../../../../src/app/bldgresult/bldgresult.component';
import * as import2 from '../../../../src/app/bldgtransport.service';
const /** @type {?} */ styles_BldgResultComponent = (([]));
export const /** @type {?} */ RenderType_BldgResultComponent = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_BldgResultComponent,
    data: {}
});
/**
 * @param {?} l
 * @return {?}
 */
export function View_BldgResultComponent_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, ((null)), ((null)), 68, 'div', [[
                'class',
                'w3-row w3-container w3-content'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n\n	'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'h2', [[
                'class',
                'w3-xxxlarge'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['Location'])),
        (l()(), import0.ɵted(((null)), ['\n\n\n		'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 62, 'table', [[
                'class',
                'w3-table-all w3-large w3-white'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 60, 'tbody', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 4, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'th', [[
                'colspan',
                '2'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            'BLDG ',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 7, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['GRID'])),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 7, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['Sector & Block'])),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 4, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', [[
                'colspan',
                '2'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 4, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', [[
                'colspan',
                '2'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 4, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', [[
                'colspan',
                '2'
            ]
        ], ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 7, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['East'])),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 7, 'tr', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), ['North'])),
        (l()(), import0.ɵted(((null)), ['\n				'])),
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'td', (([])), ((null)), ((null)), ((null)), ((null)), ((null)))),
        (l()(), import0.ɵted(((null)), [
            '',
            ''
        ])),
        (l()(), import0.ɵted(((null)), ['\n			'])),
        (l()(), import0.ɵted(((null)), ['\n		'])),
        (l()(), import0.ɵted(((null)), ['\n	'])),
        (l()(), import0.ɵted(((null)), ['\n']))
    ], ((null)), (ck, v) => {
        var /** @type {?} */ co = v.component;
        const /** @type {?} */ currVal_0 = co.msg._id;
        ck(v, 11, 0, currVal_0);
        const /** @type {?} */ currVal_1 = co.msg.grid;
        ck(v, 20, 0, currVal_1);
        const /** @type {?} */ currVal_2 = co.msg.sb;
        ck(v, 29, 0, currVal_2);
        const /** @type {?} */ currVal_3 = co.msg.desc;
        ck(v, 35, 0, currVal_3);
        const /** @type {?} */ currVal_4 = co.msg.u;
        ck(v, 41, 0, currVal_4);
        const /** @type {?} */ currVal_5 = co.msg.info;
        ck(v, 47, 0, currVal_5);
        const /** @type {?} */ currVal_6 = co.msg.e;
        ck(v, 56, 0, currVal_6);
        const /** @type {?} */ currVal_7 = co.msg.n;
        ck(v, 65, 0, currVal_7);
    });
}
/**
 * @param {?} l
 * @return {?}
 */
function View_BldgResultComponent_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, ((null)), ((null)), 1, 'ng-component', (([])), ((null)), ((null)), ((null)), View_BldgResultComponent_0, RenderType_BldgResultComponent)),
        import0.ɵdid(57344, ((null)), 0, import1.BldgResultComponent, [import2.BldgtransportService], ((null)), ((null)))
    ], (ck, v) => {
        ck(v, 1, 0);
    }, ((null)));
}
export const /** @type {?} */ BldgResultComponentNgFactory = import0.ɵccf('ng-component', import1.BldgResultComponent, View_BldgResultComponent_Host_0, {}, {}, (([])));
